// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kind

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// KIND PatchJSON6902
type PatchJSON6902 struct {
	pulumi.CustomResourceState
}

// NewPatchJSON6902 registers a new resource with the given unique name, arguments, and options.
func NewPatchJSON6902(ctx *pulumi.Context,
	name string, args *PatchJSON6902Args, opts ...pulumi.ResourceOption) (*PatchJSON6902, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Group == nil {
		return nil, errors.New("invalid value for required argument 'Group'")
	}
	if args.Kind == nil {
		return nil, errors.New("invalid value for required argument 'Kind'")
	}
	if args.Patch == nil {
		return nil, errors.New("invalid value for required argument 'Patch'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource PatchJSON6902
	err := ctx.RegisterResource("kind:index:PatchJSON6902", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPatchJSON6902 gets an existing PatchJSON6902 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPatchJSON6902(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PatchJSON6902State, opts ...pulumi.ResourceOption) (*PatchJSON6902, error) {
	var resource PatchJSON6902
	err := ctx.ReadResource("kind:index:PatchJSON6902", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PatchJSON6902 resources.
type patchJSON6902State struct {
}

type PatchJSON6902State struct {
}

func (PatchJSON6902State) ElementType() reflect.Type {
	return reflect.TypeOf((*patchJSON6902State)(nil)).Elem()
}

type patchJSON6902Args struct {
	Group   string `pulumi:"group"`
	Kind    string `pulumi:"kind"`
	Patch   string `pulumi:"patch"`
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a PatchJSON6902 resource.
type PatchJSON6902Args struct {
	Group   pulumi.StringInput
	Kind    pulumi.StringInput
	Patch   pulumi.StringInput
	Version pulumi.StringInput
}

func (PatchJSON6902Args) ElementType() reflect.Type {
	return reflect.TypeOf((*patchJSON6902Args)(nil)).Elem()
}

type PatchJSON6902Input interface {
	pulumi.Input

	ToPatchJSON6902Output() PatchJSON6902Output
	ToPatchJSON6902OutputWithContext(ctx context.Context) PatchJSON6902Output
}

func (*PatchJSON6902) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchJSON6902)(nil))
}

func (i *PatchJSON6902) ToPatchJSON6902Output() PatchJSON6902Output {
	return i.ToPatchJSON6902OutputWithContext(context.Background())
}

func (i *PatchJSON6902) ToPatchJSON6902OutputWithContext(ctx context.Context) PatchJSON6902Output {
	return pulumi.ToOutputWithContext(ctx, i).(PatchJSON6902Output)
}

func (i *PatchJSON6902) ToPatchJSON6902PtrOutput() PatchJSON6902PtrOutput {
	return i.ToPatchJSON6902PtrOutputWithContext(context.Background())
}

func (i *PatchJSON6902) ToPatchJSON6902PtrOutputWithContext(ctx context.Context) PatchJSON6902PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchJSON6902PtrOutput)
}

type PatchJSON6902PtrInput interface {
	pulumi.Input

	ToPatchJSON6902PtrOutput() PatchJSON6902PtrOutput
	ToPatchJSON6902PtrOutputWithContext(ctx context.Context) PatchJSON6902PtrOutput
}

type patchJSON6902PtrType PatchJSON6902Args

func (*patchJSON6902PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchJSON6902)(nil))
}

func (i *patchJSON6902PtrType) ToPatchJSON6902PtrOutput() PatchJSON6902PtrOutput {
	return i.ToPatchJSON6902PtrOutputWithContext(context.Background())
}

func (i *patchJSON6902PtrType) ToPatchJSON6902PtrOutputWithContext(ctx context.Context) PatchJSON6902PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchJSON6902PtrOutput)
}

// PatchJSON6902ArrayInput is an input type that accepts PatchJSON6902Array and PatchJSON6902ArrayOutput values.
// You can construct a concrete instance of `PatchJSON6902ArrayInput` via:
//
//          PatchJSON6902Array{ PatchJSON6902Args{...} }
type PatchJSON6902ArrayInput interface {
	pulumi.Input

	ToPatchJSON6902ArrayOutput() PatchJSON6902ArrayOutput
	ToPatchJSON6902ArrayOutputWithContext(context.Context) PatchJSON6902ArrayOutput
}

type PatchJSON6902Array []PatchJSON6902Input

func (PatchJSON6902Array) ElementType() reflect.Type {
	return reflect.TypeOf(([]*PatchJSON6902)(nil))
}

func (i PatchJSON6902Array) ToPatchJSON6902ArrayOutput() PatchJSON6902ArrayOutput {
	return i.ToPatchJSON6902ArrayOutputWithContext(context.Background())
}

func (i PatchJSON6902Array) ToPatchJSON6902ArrayOutputWithContext(ctx context.Context) PatchJSON6902ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchJSON6902ArrayOutput)
}

// PatchJSON6902MapInput is an input type that accepts PatchJSON6902Map and PatchJSON6902MapOutput values.
// You can construct a concrete instance of `PatchJSON6902MapInput` via:
//
//          PatchJSON6902Map{ "key": PatchJSON6902Args{...} }
type PatchJSON6902MapInput interface {
	pulumi.Input

	ToPatchJSON6902MapOutput() PatchJSON6902MapOutput
	ToPatchJSON6902MapOutputWithContext(context.Context) PatchJSON6902MapOutput
}

type PatchJSON6902Map map[string]PatchJSON6902Input

func (PatchJSON6902Map) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*PatchJSON6902)(nil))
}

func (i PatchJSON6902Map) ToPatchJSON6902MapOutput() PatchJSON6902MapOutput {
	return i.ToPatchJSON6902MapOutputWithContext(context.Background())
}

func (i PatchJSON6902Map) ToPatchJSON6902MapOutputWithContext(ctx context.Context) PatchJSON6902MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchJSON6902MapOutput)
}

type PatchJSON6902Output struct {
	*pulumi.OutputState
}

func (PatchJSON6902Output) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchJSON6902)(nil))
}

func (o PatchJSON6902Output) ToPatchJSON6902Output() PatchJSON6902Output {
	return o
}

func (o PatchJSON6902Output) ToPatchJSON6902OutputWithContext(ctx context.Context) PatchJSON6902Output {
	return o
}

func (o PatchJSON6902Output) ToPatchJSON6902PtrOutput() PatchJSON6902PtrOutput {
	return o.ToPatchJSON6902PtrOutputWithContext(context.Background())
}

func (o PatchJSON6902Output) ToPatchJSON6902PtrOutputWithContext(ctx context.Context) PatchJSON6902PtrOutput {
	return o.ApplyT(func(v PatchJSON6902) *PatchJSON6902 {
		return &v
	}).(PatchJSON6902PtrOutput)
}

type PatchJSON6902PtrOutput struct {
	*pulumi.OutputState
}

func (PatchJSON6902PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PatchJSON6902)(nil))
}

func (o PatchJSON6902PtrOutput) ToPatchJSON6902PtrOutput() PatchJSON6902PtrOutput {
	return o
}

func (o PatchJSON6902PtrOutput) ToPatchJSON6902PtrOutputWithContext(ctx context.Context) PatchJSON6902PtrOutput {
	return o
}

type PatchJSON6902ArrayOutput struct{ *pulumi.OutputState }

func (PatchJSON6902ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchJSON6902)(nil))
}

func (o PatchJSON6902ArrayOutput) ToPatchJSON6902ArrayOutput() PatchJSON6902ArrayOutput {
	return o
}

func (o PatchJSON6902ArrayOutput) ToPatchJSON6902ArrayOutputWithContext(ctx context.Context) PatchJSON6902ArrayOutput {
	return o
}

func (o PatchJSON6902ArrayOutput) Index(i pulumi.IntInput) PatchJSON6902Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PatchJSON6902 {
		return vs[0].([]PatchJSON6902)[vs[1].(int)]
	}).(PatchJSON6902Output)
}

type PatchJSON6902MapOutput struct{ *pulumi.OutputState }

func (PatchJSON6902MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PatchJSON6902)(nil))
}

func (o PatchJSON6902MapOutput) ToPatchJSON6902MapOutput() PatchJSON6902MapOutput {
	return o
}

func (o PatchJSON6902MapOutput) ToPatchJSON6902MapOutputWithContext(ctx context.Context) PatchJSON6902MapOutput {
	return o
}

func (o PatchJSON6902MapOutput) MapIndex(k pulumi.StringInput) PatchJSON6902Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) PatchJSON6902 {
		return vs[0].(map[string]PatchJSON6902)[vs[1].(string)]
	}).(PatchJSON6902Output)
}

func init() {
	pulumi.RegisterOutputType(PatchJSON6902Output{})
	pulumi.RegisterOutputType(PatchJSON6902PtrOutput{})
	pulumi.RegisterOutputType(PatchJSON6902ArrayOutput{})
	pulumi.RegisterOutputType(PatchJSON6902MapOutput{})
}
