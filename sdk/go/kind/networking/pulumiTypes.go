// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networking

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// KIND Networking
type NetworkingType struct {
	ApiServerAddress  *string `pulumi:"apiServerAddress"`
	ApiServerPort     *int    `pulumi:"apiServerPort"`
	DisableDefaultCNI *bool   `pulumi:"disableDefaultCNI"`
	IpFamily          *string `pulumi:"ipFamily"`
	KubeProxyMode     *string `pulumi:"kubeProxyMode"`
	PodSubnet         *string `pulumi:"podSubnet"`
	ServiceSubnet     *string `pulumi:"serviceSubnet"`
}

// NetworkingTypeInput is an input type that accepts NetworkingTypeArgs and NetworkingTypeOutput values.
// You can construct a concrete instance of `NetworkingTypeInput` via:
//
//          NetworkingTypeArgs{...}
type NetworkingTypeInput interface {
	pulumi.Input

	ToNetworkingTypeOutput() NetworkingTypeOutput
	ToNetworkingTypeOutputWithContext(context.Context) NetworkingTypeOutput
}

// KIND Networking
type NetworkingTypeArgs struct {
	ApiServerAddress  pulumi.StringPtrInput `pulumi:"apiServerAddress"`
	ApiServerPort     pulumi.IntPtrInput    `pulumi:"apiServerPort"`
	DisableDefaultCNI pulumi.BoolPtrInput   `pulumi:"disableDefaultCNI"`
	IpFamily          pulumi.StringPtrInput `pulumi:"ipFamily"`
	KubeProxyMode     pulumi.StringPtrInput `pulumi:"kubeProxyMode"`
	PodSubnet         pulumi.StringPtrInput `pulumi:"podSubnet"`
	ServiceSubnet     pulumi.StringPtrInput `pulumi:"serviceSubnet"`
}

func (NetworkingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkingType)(nil)).Elem()
}

func (i NetworkingTypeArgs) ToNetworkingTypeOutput() NetworkingTypeOutput {
	return i.ToNetworkingTypeOutputWithContext(context.Background())
}

func (i NetworkingTypeArgs) ToNetworkingTypeOutputWithContext(ctx context.Context) NetworkingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkingTypeOutput)
}

func (i NetworkingTypeArgs) ToNetworkingTypePtrOutput() NetworkingTypePtrOutput {
	return i.ToNetworkingTypePtrOutputWithContext(context.Background())
}

func (i NetworkingTypeArgs) ToNetworkingTypePtrOutputWithContext(ctx context.Context) NetworkingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkingTypeOutput).ToNetworkingTypePtrOutputWithContext(ctx)
}

// NetworkingTypePtrInput is an input type that accepts NetworkingTypeArgs, NetworkingTypePtr and NetworkingTypePtrOutput values.
// You can construct a concrete instance of `NetworkingTypePtrInput` via:
//
//          NetworkingTypeArgs{...}
//
//  or:
//
//          nil
type NetworkingTypePtrInput interface {
	pulumi.Input

	ToNetworkingTypePtrOutput() NetworkingTypePtrOutput
	ToNetworkingTypePtrOutputWithContext(context.Context) NetworkingTypePtrOutput
}

type networkingTypePtrType NetworkingTypeArgs

func NetworkingTypePtr(v *NetworkingTypeArgs) NetworkingTypePtrInput {
	return (*networkingTypePtrType)(v)
}

func (*networkingTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkingType)(nil)).Elem()
}

func (i *networkingTypePtrType) ToNetworkingTypePtrOutput() NetworkingTypePtrOutput {
	return i.ToNetworkingTypePtrOutputWithContext(context.Background())
}

func (i *networkingTypePtrType) ToNetworkingTypePtrOutputWithContext(ctx context.Context) NetworkingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkingTypePtrOutput)
}

// KIND Networking
type NetworkingTypeOutput struct{ *pulumi.OutputState }

func (NetworkingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkingType)(nil)).Elem()
}

func (o NetworkingTypeOutput) ToNetworkingTypeOutput() NetworkingTypeOutput {
	return o
}

func (o NetworkingTypeOutput) ToNetworkingTypeOutputWithContext(ctx context.Context) NetworkingTypeOutput {
	return o
}

func (o NetworkingTypeOutput) ToNetworkingTypePtrOutput() NetworkingTypePtrOutput {
	return o.ToNetworkingTypePtrOutputWithContext(context.Background())
}

func (o NetworkingTypeOutput) ToNetworkingTypePtrOutputWithContext(ctx context.Context) NetworkingTypePtrOutput {
	return o.ApplyT(func(v NetworkingType) *NetworkingType {
		return &v
	}).(NetworkingTypePtrOutput)
}
func (o NetworkingTypeOutput) ApiServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingType) *string { return v.ApiServerAddress }).(pulumi.StringPtrOutput)
}

func (o NetworkingTypeOutput) ApiServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkingType) *int { return v.ApiServerPort }).(pulumi.IntPtrOutput)
}

func (o NetworkingTypeOutput) DisableDefaultCNI() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkingType) *bool { return v.DisableDefaultCNI }).(pulumi.BoolPtrOutput)
}

func (o NetworkingTypeOutput) IpFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingType) *string { return v.IpFamily }).(pulumi.StringPtrOutput)
}

func (o NetworkingTypeOutput) KubeProxyMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingType) *string { return v.KubeProxyMode }).(pulumi.StringPtrOutput)
}

func (o NetworkingTypeOutput) PodSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingType) *string { return v.PodSubnet }).(pulumi.StringPtrOutput)
}

func (o NetworkingTypeOutput) ServiceSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingType) *string { return v.ServiceSubnet }).(pulumi.StringPtrOutput)
}

type NetworkingTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkingType)(nil)).Elem()
}

func (o NetworkingTypePtrOutput) ToNetworkingTypePtrOutput() NetworkingTypePtrOutput {
	return o
}

func (o NetworkingTypePtrOutput) ToNetworkingTypePtrOutputWithContext(ctx context.Context) NetworkingTypePtrOutput {
	return o
}

func (o NetworkingTypePtrOutput) Elem() NetworkingTypeOutput {
	return o.ApplyT(func(v *NetworkingType) NetworkingType { return *v }).(NetworkingTypeOutput)
}

func (o NetworkingTypePtrOutput) ApiServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *string {
		if v == nil {
			return nil
		}
		return v.ApiServerAddress
	}).(pulumi.StringPtrOutput)
}

func (o NetworkingTypePtrOutput) ApiServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *int {
		if v == nil {
			return nil
		}
		return v.ApiServerPort
	}).(pulumi.IntPtrOutput)
}

func (o NetworkingTypePtrOutput) DisableDefaultCNI() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *bool {
		if v == nil {
			return nil
		}
		return v.DisableDefaultCNI
	}).(pulumi.BoolPtrOutput)
}

func (o NetworkingTypePtrOutput) IpFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *string {
		if v == nil {
			return nil
		}
		return v.IpFamily
	}).(pulumi.StringPtrOutput)
}

func (o NetworkingTypePtrOutput) KubeProxyMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *string {
		if v == nil {
			return nil
		}
		return v.KubeProxyMode
	}).(pulumi.StringPtrOutput)
}

func (o NetworkingTypePtrOutput) PodSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *string {
		if v == nil {
			return nil
		}
		return v.PodSubnet
	}).(pulumi.StringPtrOutput)
}

func (o NetworkingTypePtrOutput) ServiceSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *string {
		if v == nil {
			return nil
		}
		return v.ServiceSubnet
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(NetworkingTypeOutput{})
	pulumi.RegisterOutputType(NetworkingTypePtrOutput{})
}
