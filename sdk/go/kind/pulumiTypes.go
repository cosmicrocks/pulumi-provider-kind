// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kind

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// KIND containerdConfigPatchesJSON6902 type
type ClusterType struct {
	ApiVersion                      *string             `pulumi:"apiVersion"`
	ContainerdConfigPatches         []string            `pulumi:"containerdConfigPatches"`
	ContainerdConfigPatchesJSON6902 []string            `pulumi:"containerdConfigPatchesJSON6902"`
	FeatureGates                    map[string]string   `pulumi:"featureGates"`
	Kind                            *string             `pulumi:"kind"`
	KubeadmConfigPatches            []string            `pulumi:"kubeadmConfigPatches"`
	KubeadmConfigPatchesJSON6902    []PatchJSON6902Type `pulumi:"kubeadmConfigPatchesJSON6902"`
	Name                            *string             `pulumi:"name"`
	Networking                      *NetworkingType     `pulumi:"networking"`
	Nodes                           []NodeType          `pulumi:"nodes"`
	RuntimeConfig                   map[string]string   `pulumi:"runtimeConfig"`
}

// ClusterTypeInput is an input type that accepts ClusterTypeArgs and ClusterTypeOutput values.
// You can construct a concrete instance of `ClusterTypeInput` via:
//
//          ClusterTypeArgs{...}
type ClusterTypeInput interface {
	pulumi.Input

	ToClusterTypeOutput() ClusterTypeOutput
	ToClusterTypeOutputWithContext(context.Context) ClusterTypeOutput
}

// KIND containerdConfigPatchesJSON6902 type
type ClusterTypeArgs struct {
	ApiVersion                      pulumi.StringPtrInput       `pulumi:"apiVersion"`
	ContainerdConfigPatches         pulumi.StringArrayInput     `pulumi:"containerdConfigPatches"`
	ContainerdConfigPatchesJSON6902 pulumi.StringArrayInput     `pulumi:"containerdConfigPatchesJSON6902"`
	FeatureGates                    pulumi.StringMapInput       `pulumi:"featureGates"`
	Kind                            pulumi.StringPtrInput       `pulumi:"kind"`
	KubeadmConfigPatches            pulumi.StringArrayInput     `pulumi:"kubeadmConfigPatches"`
	KubeadmConfigPatchesJSON6902    PatchJSON6902TypeArrayInput `pulumi:"kubeadmConfigPatchesJSON6902"`
	Name                            pulumi.StringPtrInput       `pulumi:"name"`
	Networking                      NetworkingTypePtrInput      `pulumi:"networking"`
	Nodes                           NodeTypeArrayInput          `pulumi:"nodes"`
	RuntimeConfig                   pulumi.StringMapInput       `pulumi:"runtimeConfig"`
}

func (ClusterTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterType)(nil)).Elem()
}

func (i ClusterTypeArgs) ToClusterTypeOutput() ClusterTypeOutput {
	return i.ToClusterTypeOutputWithContext(context.Background())
}

func (i ClusterTypeArgs) ToClusterTypeOutputWithContext(ctx context.Context) ClusterTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterTypeOutput)
}

// KIND containerdConfigPatchesJSON6902 type
type ClusterTypeOutput struct{ *pulumi.OutputState }

func (ClusterTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterType)(nil)).Elem()
}

func (o ClusterTypeOutput) ToClusterTypeOutput() ClusterTypeOutput {
	return o
}

func (o ClusterTypeOutput) ToClusterTypeOutputWithContext(ctx context.Context) ClusterTypeOutput {
	return o
}

func (o ClusterTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ClusterTypeOutput) ContainerdConfigPatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterType) []string { return v.ContainerdConfigPatches }).(pulumi.StringArrayOutput)
}

func (o ClusterTypeOutput) ContainerdConfigPatchesJSON6902() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterType) []string { return v.ContainerdConfigPatchesJSON6902 }).(pulumi.StringArrayOutput)
}

func (o ClusterTypeOutput) FeatureGates() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterType) map[string]string { return v.FeatureGates }).(pulumi.StringMapOutput)
}

func (o ClusterTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ClusterTypeOutput) KubeadmConfigPatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterType) []string { return v.KubeadmConfigPatches }).(pulumi.StringArrayOutput)
}

func (o ClusterTypeOutput) KubeadmConfigPatchesJSON6902() PatchJSON6902TypeArrayOutput {
	return o.ApplyT(func(v ClusterType) []PatchJSON6902Type { return v.KubeadmConfigPatchesJSON6902 }).(PatchJSON6902TypeArrayOutput)
}

func (o ClusterTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ClusterTypeOutput) Networking() NetworkingTypePtrOutput {
	return o.ApplyT(func(v ClusterType) *NetworkingType { return v.Networking }).(NetworkingTypePtrOutput)
}

func (o ClusterTypeOutput) Nodes() NodeTypeArrayOutput {
	return o.ApplyT(func(v ClusterType) []NodeType { return v.Nodes }).(NodeTypeArrayOutput)
}

func (o ClusterTypeOutput) RuntimeConfig() pulumi.StringMapOutput {
	return o.ApplyT(func(v ClusterType) map[string]string { return v.RuntimeConfig }).(pulumi.StringMapOutput)
}

// KIND propagation type
type MountType struct {
	ContainerPath  *string `pulumi:"containerPath"`
	HostPath       *string `pulumi:"hostPath"`
	Propagation    *string `pulumi:"propagation"`
	ReadOnly       *bool   `pulumi:"readOnly"`
	SelinuxRelabel *bool   `pulumi:"selinuxRelabel"`
}

// MountTypeInput is an input type that accepts MountTypeArgs and MountTypeOutput values.
// You can construct a concrete instance of `MountTypeInput` via:
//
//          MountTypeArgs{...}
type MountTypeInput interface {
	pulumi.Input

	ToMountTypeOutput() MountTypeOutput
	ToMountTypeOutputWithContext(context.Context) MountTypeOutput
}

// KIND propagation type
type MountTypeArgs struct {
	ContainerPath  pulumi.StringPtrInput `pulumi:"containerPath"`
	HostPath       pulumi.StringPtrInput `pulumi:"hostPath"`
	Propagation    pulumi.StringPtrInput `pulumi:"propagation"`
	ReadOnly       pulumi.BoolPtrInput   `pulumi:"readOnly"`
	SelinuxRelabel pulumi.BoolPtrInput   `pulumi:"selinuxRelabel"`
}

func (MountTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MountType)(nil)).Elem()
}

func (i MountTypeArgs) ToMountTypeOutput() MountTypeOutput {
	return i.ToMountTypeOutputWithContext(context.Background())
}

func (i MountTypeArgs) ToMountTypeOutputWithContext(ctx context.Context) MountTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountTypeOutput)
}

// MountTypeArrayInput is an input type that accepts MountTypeArray and MountTypeArrayOutput values.
// You can construct a concrete instance of `MountTypeArrayInput` via:
//
//          MountTypeArray{ MountTypeArgs{...} }
type MountTypeArrayInput interface {
	pulumi.Input

	ToMountTypeArrayOutput() MountTypeArrayOutput
	ToMountTypeArrayOutputWithContext(context.Context) MountTypeArrayOutput
}

type MountTypeArray []MountTypeInput

func (MountTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountType)(nil)).Elem()
}

func (i MountTypeArray) ToMountTypeArrayOutput() MountTypeArrayOutput {
	return i.ToMountTypeArrayOutputWithContext(context.Background())
}

func (i MountTypeArray) ToMountTypeArrayOutputWithContext(ctx context.Context) MountTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MountTypeArrayOutput)
}

// KIND propagation type
type MountTypeOutput struct{ *pulumi.OutputState }

func (MountTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MountType)(nil)).Elem()
}

func (o MountTypeOutput) ToMountTypeOutput() MountTypeOutput {
	return o
}

func (o MountTypeOutput) ToMountTypeOutputWithContext(ctx context.Context) MountTypeOutput {
	return o
}

func (o MountTypeOutput) ContainerPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountType) *string { return v.ContainerPath }).(pulumi.StringPtrOutput)
}

func (o MountTypeOutput) HostPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountType) *string { return v.HostPath }).(pulumi.StringPtrOutput)
}

func (o MountTypeOutput) Propagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MountType) *string { return v.Propagation }).(pulumi.StringPtrOutput)
}

func (o MountTypeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MountType) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

func (o MountTypeOutput) SelinuxRelabel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MountType) *bool { return v.SelinuxRelabel }).(pulumi.BoolPtrOutput)
}

type MountTypeArrayOutput struct{ *pulumi.OutputState }

func (MountTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MountType)(nil)).Elem()
}

func (o MountTypeArrayOutput) ToMountTypeArrayOutput() MountTypeArrayOutput {
	return o
}

func (o MountTypeArrayOutput) ToMountTypeArrayOutputWithContext(ctx context.Context) MountTypeArrayOutput {
	return o
}

func (o MountTypeArrayOutput) Index(i pulumi.IntInput) MountTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MountType {
		return vs[0].([]MountType)[vs[1].(int)]
	}).(MountTypeOutput)
}

// KIND kubeProxyMode type
type NetworkingType struct {
	ApiServerAddress  *string `pulumi:"apiServerAddress"`
	ApiServerPort     *int    `pulumi:"apiServerPort"`
	DisableDefaultCNI *bool   `pulumi:"disableDefaultCNI"`
	IpFamily          *string `pulumi:"ipFamily"`
	KubeProxyMode     *string `pulumi:"kubeProxyMode"`
	PodSubnet         *string `pulumi:"podSubnet"`
	ServiceSubnet     *string `pulumi:"serviceSubnet"`
}

// NetworkingTypeInput is an input type that accepts NetworkingTypeArgs and NetworkingTypeOutput values.
// You can construct a concrete instance of `NetworkingTypeInput` via:
//
//          NetworkingTypeArgs{...}
type NetworkingTypeInput interface {
	pulumi.Input

	ToNetworkingTypeOutput() NetworkingTypeOutput
	ToNetworkingTypeOutputWithContext(context.Context) NetworkingTypeOutput
}

// KIND kubeProxyMode type
type NetworkingTypeArgs struct {
	ApiServerAddress  pulumi.StringPtrInput `pulumi:"apiServerAddress"`
	ApiServerPort     pulumi.IntPtrInput    `pulumi:"apiServerPort"`
	DisableDefaultCNI pulumi.BoolPtrInput   `pulumi:"disableDefaultCNI"`
	IpFamily          pulumi.StringPtrInput `pulumi:"ipFamily"`
	KubeProxyMode     pulumi.StringPtrInput `pulumi:"kubeProxyMode"`
	PodSubnet         pulumi.StringPtrInput `pulumi:"podSubnet"`
	ServiceSubnet     pulumi.StringPtrInput `pulumi:"serviceSubnet"`
}

func (NetworkingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkingType)(nil)).Elem()
}

func (i NetworkingTypeArgs) ToNetworkingTypeOutput() NetworkingTypeOutput {
	return i.ToNetworkingTypeOutputWithContext(context.Background())
}

func (i NetworkingTypeArgs) ToNetworkingTypeOutputWithContext(ctx context.Context) NetworkingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkingTypeOutput)
}

func (i NetworkingTypeArgs) ToNetworkingTypePtrOutput() NetworkingTypePtrOutput {
	return i.ToNetworkingTypePtrOutputWithContext(context.Background())
}

func (i NetworkingTypeArgs) ToNetworkingTypePtrOutputWithContext(ctx context.Context) NetworkingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkingTypeOutput).ToNetworkingTypePtrOutputWithContext(ctx)
}

// NetworkingTypePtrInput is an input type that accepts NetworkingTypeArgs, NetworkingTypePtr and NetworkingTypePtrOutput values.
// You can construct a concrete instance of `NetworkingTypePtrInput` via:
//
//          NetworkingTypeArgs{...}
//
//  or:
//
//          nil
type NetworkingTypePtrInput interface {
	pulumi.Input

	ToNetworkingTypePtrOutput() NetworkingTypePtrOutput
	ToNetworkingTypePtrOutputWithContext(context.Context) NetworkingTypePtrOutput
}

type networkingTypePtrType NetworkingTypeArgs

func NetworkingTypePtr(v *NetworkingTypeArgs) NetworkingTypePtrInput {
	return (*networkingTypePtrType)(v)
}

func (*networkingTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkingType)(nil)).Elem()
}

func (i *networkingTypePtrType) ToNetworkingTypePtrOutput() NetworkingTypePtrOutput {
	return i.ToNetworkingTypePtrOutputWithContext(context.Background())
}

func (i *networkingTypePtrType) ToNetworkingTypePtrOutputWithContext(ctx context.Context) NetworkingTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NetworkingTypePtrOutput)
}

// KIND kubeProxyMode type
type NetworkingTypeOutput struct{ *pulumi.OutputState }

func (NetworkingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NetworkingType)(nil)).Elem()
}

func (o NetworkingTypeOutput) ToNetworkingTypeOutput() NetworkingTypeOutput {
	return o
}

func (o NetworkingTypeOutput) ToNetworkingTypeOutputWithContext(ctx context.Context) NetworkingTypeOutput {
	return o
}

func (o NetworkingTypeOutput) ToNetworkingTypePtrOutput() NetworkingTypePtrOutput {
	return o.ToNetworkingTypePtrOutputWithContext(context.Background())
}

func (o NetworkingTypeOutput) ToNetworkingTypePtrOutputWithContext(ctx context.Context) NetworkingTypePtrOutput {
	return o.ApplyT(func(v NetworkingType) *NetworkingType {
		return &v
	}).(NetworkingTypePtrOutput)
}
func (o NetworkingTypeOutput) ApiServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingType) *string { return v.ApiServerAddress }).(pulumi.StringPtrOutput)
}

func (o NetworkingTypeOutput) ApiServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NetworkingType) *int { return v.ApiServerPort }).(pulumi.IntPtrOutput)
}

func (o NetworkingTypeOutput) DisableDefaultCNI() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NetworkingType) *bool { return v.DisableDefaultCNI }).(pulumi.BoolPtrOutput)
}

func (o NetworkingTypeOutput) IpFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingType) *string { return v.IpFamily }).(pulumi.StringPtrOutput)
}

func (o NetworkingTypeOutput) KubeProxyMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingType) *string { return v.KubeProxyMode }).(pulumi.StringPtrOutput)
}

func (o NetworkingTypeOutput) PodSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingType) *string { return v.PodSubnet }).(pulumi.StringPtrOutput)
}

func (o NetworkingTypeOutput) ServiceSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NetworkingType) *string { return v.ServiceSubnet }).(pulumi.StringPtrOutput)
}

type NetworkingTypePtrOutput struct{ *pulumi.OutputState }

func (NetworkingTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NetworkingType)(nil)).Elem()
}

func (o NetworkingTypePtrOutput) ToNetworkingTypePtrOutput() NetworkingTypePtrOutput {
	return o
}

func (o NetworkingTypePtrOutput) ToNetworkingTypePtrOutputWithContext(ctx context.Context) NetworkingTypePtrOutput {
	return o
}

func (o NetworkingTypePtrOutput) Elem() NetworkingTypeOutput {
	return o.ApplyT(func(v *NetworkingType) NetworkingType { return *v }).(NetworkingTypeOutput)
}

func (o NetworkingTypePtrOutput) ApiServerAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *string {
		if v == nil {
			return nil
		}
		return v.ApiServerAddress
	}).(pulumi.StringPtrOutput)
}

func (o NetworkingTypePtrOutput) ApiServerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *int {
		if v == nil {
			return nil
		}
		return v.ApiServerPort
	}).(pulumi.IntPtrOutput)
}

func (o NetworkingTypePtrOutput) DisableDefaultCNI() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *bool {
		if v == nil {
			return nil
		}
		return v.DisableDefaultCNI
	}).(pulumi.BoolPtrOutput)
}

func (o NetworkingTypePtrOutput) IpFamily() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *string {
		if v == nil {
			return nil
		}
		return v.IpFamily
	}).(pulumi.StringPtrOutput)
}

func (o NetworkingTypePtrOutput) KubeProxyMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *string {
		if v == nil {
			return nil
		}
		return v.KubeProxyMode
	}).(pulumi.StringPtrOutput)
}

func (o NetworkingTypePtrOutput) PodSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *string {
		if v == nil {
			return nil
		}
		return v.PodSubnet
	}).(pulumi.StringPtrOutput)
}

func (o NetworkingTypePtrOutput) ServiceSubnet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NetworkingType) *string {
		if v == nil {
			return nil
		}
		return v.ServiceSubnet
	}).(pulumi.StringPtrOutput)
}

// KIND kubeadmConfigPatchesJSON6902 type
type NodeType struct {
	ExtraMounts                  []MountType         `pulumi:"extraMounts"`
	ExtraPortMappings            []PortMappingType   `pulumi:"extraPortMappings"`
	Image                        *string             `pulumi:"image"`
	KubeadmConfigPatches         []string            `pulumi:"kubeadmConfigPatches"`
	KubeadmConfigPatchesJSON6902 []PatchJSON6902Type `pulumi:"kubeadmConfigPatchesJSON6902"`
	Labels                       map[string]string   `pulumi:"labels"`
	Role                         *string             `pulumi:"role"`
}

// NodeTypeInput is an input type that accepts NodeTypeArgs and NodeTypeOutput values.
// You can construct a concrete instance of `NodeTypeInput` via:
//
//          NodeTypeArgs{...}
type NodeTypeInput interface {
	pulumi.Input

	ToNodeTypeOutput() NodeTypeOutput
	ToNodeTypeOutputWithContext(context.Context) NodeTypeOutput
}

// KIND kubeadmConfigPatchesJSON6902 type
type NodeTypeArgs struct {
	ExtraMounts                  MountTypeArrayInput         `pulumi:"extraMounts"`
	ExtraPortMappings            PortMappingTypeArrayInput   `pulumi:"extraPortMappings"`
	Image                        pulumi.StringPtrInput       `pulumi:"image"`
	KubeadmConfigPatches         pulumi.StringArrayInput     `pulumi:"kubeadmConfigPatches"`
	KubeadmConfigPatchesJSON6902 PatchJSON6902TypeArrayInput `pulumi:"kubeadmConfigPatchesJSON6902"`
	Labels                       pulumi.StringMapInput       `pulumi:"labels"`
	Role                         pulumi.StringPtrInput       `pulumi:"role"`
}

func (NodeTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeType)(nil)).Elem()
}

func (i NodeTypeArgs) ToNodeTypeOutput() NodeTypeOutput {
	return i.ToNodeTypeOutputWithContext(context.Background())
}

func (i NodeTypeArgs) ToNodeTypeOutputWithContext(ctx context.Context) NodeTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTypeOutput)
}

// NodeTypeArrayInput is an input type that accepts NodeTypeArray and NodeTypeArrayOutput values.
// You can construct a concrete instance of `NodeTypeArrayInput` via:
//
//          NodeTypeArray{ NodeTypeArgs{...} }
type NodeTypeArrayInput interface {
	pulumi.Input

	ToNodeTypeArrayOutput() NodeTypeArrayOutput
	ToNodeTypeArrayOutputWithContext(context.Context) NodeTypeArrayOutput
}

type NodeTypeArray []NodeTypeInput

func (NodeTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeType)(nil)).Elem()
}

func (i NodeTypeArray) ToNodeTypeArrayOutput() NodeTypeArrayOutput {
	return i.ToNodeTypeArrayOutputWithContext(context.Background())
}

func (i NodeTypeArray) ToNodeTypeArrayOutputWithContext(ctx context.Context) NodeTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NodeTypeArrayOutput)
}

// KIND kubeadmConfigPatchesJSON6902 type
type NodeTypeOutput struct{ *pulumi.OutputState }

func (NodeTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NodeType)(nil)).Elem()
}

func (o NodeTypeOutput) ToNodeTypeOutput() NodeTypeOutput {
	return o
}

func (o NodeTypeOutput) ToNodeTypeOutputWithContext(ctx context.Context) NodeTypeOutput {
	return o
}

func (o NodeTypeOutput) ExtraMounts() MountTypeArrayOutput {
	return o.ApplyT(func(v NodeType) []MountType { return v.ExtraMounts }).(MountTypeArrayOutput)
}

func (o NodeTypeOutput) ExtraPortMappings() PortMappingTypeArrayOutput {
	return o.ApplyT(func(v NodeType) []PortMappingType { return v.ExtraPortMappings }).(PortMappingTypeArrayOutput)
}

func (o NodeTypeOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeType) *string { return v.Image }).(pulumi.StringPtrOutput)
}

func (o NodeTypeOutput) KubeadmConfigPatches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NodeType) []string { return v.KubeadmConfigPatches }).(pulumi.StringArrayOutput)
}

func (o NodeTypeOutput) KubeadmConfigPatchesJSON6902() PatchJSON6902TypeArrayOutput {
	return o.ApplyT(func(v NodeType) []PatchJSON6902Type { return v.KubeadmConfigPatchesJSON6902 }).(PatchJSON6902TypeArrayOutput)
}

func (o NodeTypeOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v NodeType) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o NodeTypeOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NodeType) *string { return v.Role }).(pulumi.StringPtrOutput)
}

type NodeTypeArrayOutput struct{ *pulumi.OutputState }

func (NodeTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NodeType)(nil)).Elem()
}

func (o NodeTypeArrayOutput) ToNodeTypeArrayOutput() NodeTypeArrayOutput {
	return o
}

func (o NodeTypeArrayOutput) ToNodeTypeArrayOutputWithContext(ctx context.Context) NodeTypeArrayOutput {
	return o
}

func (o NodeTypeArrayOutput) Index(i pulumi.IntInput) NodeTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NodeType {
		return vs[0].([]NodeType)[vs[1].(int)]
	}).(NodeTypeOutput)
}

// KIND patch type
type PatchJSON6902Type struct {
	Group   *string `pulumi:"group"`
	Kind    *string `pulumi:"kind"`
	Patch   *string `pulumi:"patch"`
	Version *string `pulumi:"version"`
}

// PatchJSON6902TypeInput is an input type that accepts PatchJSON6902TypeArgs and PatchJSON6902TypeOutput values.
// You can construct a concrete instance of `PatchJSON6902TypeInput` via:
//
//          PatchJSON6902TypeArgs{...}
type PatchJSON6902TypeInput interface {
	pulumi.Input

	ToPatchJSON6902TypeOutput() PatchJSON6902TypeOutput
	ToPatchJSON6902TypeOutputWithContext(context.Context) PatchJSON6902TypeOutput
}

// KIND patch type
type PatchJSON6902TypeArgs struct {
	Group   pulumi.StringPtrInput `pulumi:"group"`
	Kind    pulumi.StringPtrInput `pulumi:"kind"`
	Patch   pulumi.StringPtrInput `pulumi:"patch"`
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PatchJSON6902TypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchJSON6902Type)(nil)).Elem()
}

func (i PatchJSON6902TypeArgs) ToPatchJSON6902TypeOutput() PatchJSON6902TypeOutput {
	return i.ToPatchJSON6902TypeOutputWithContext(context.Background())
}

func (i PatchJSON6902TypeArgs) ToPatchJSON6902TypeOutputWithContext(ctx context.Context) PatchJSON6902TypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchJSON6902TypeOutput)
}

// PatchJSON6902TypeArrayInput is an input type that accepts PatchJSON6902TypeArray and PatchJSON6902TypeArrayOutput values.
// You can construct a concrete instance of `PatchJSON6902TypeArrayInput` via:
//
//          PatchJSON6902TypeArray{ PatchJSON6902TypeArgs{...} }
type PatchJSON6902TypeArrayInput interface {
	pulumi.Input

	ToPatchJSON6902TypeArrayOutput() PatchJSON6902TypeArrayOutput
	ToPatchJSON6902TypeArrayOutputWithContext(context.Context) PatchJSON6902TypeArrayOutput
}

type PatchJSON6902TypeArray []PatchJSON6902TypeInput

func (PatchJSON6902TypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchJSON6902Type)(nil)).Elem()
}

func (i PatchJSON6902TypeArray) ToPatchJSON6902TypeArrayOutput() PatchJSON6902TypeArrayOutput {
	return i.ToPatchJSON6902TypeArrayOutputWithContext(context.Background())
}

func (i PatchJSON6902TypeArray) ToPatchJSON6902TypeArrayOutputWithContext(ctx context.Context) PatchJSON6902TypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PatchJSON6902TypeArrayOutput)
}

// KIND patch type
type PatchJSON6902TypeOutput struct{ *pulumi.OutputState }

func (PatchJSON6902TypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PatchJSON6902Type)(nil)).Elem()
}

func (o PatchJSON6902TypeOutput) ToPatchJSON6902TypeOutput() PatchJSON6902TypeOutput {
	return o
}

func (o PatchJSON6902TypeOutput) ToPatchJSON6902TypeOutputWithContext(ctx context.Context) PatchJSON6902TypeOutput {
	return o
}

func (o PatchJSON6902TypeOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchJSON6902Type) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o PatchJSON6902TypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchJSON6902Type) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o PatchJSON6902TypeOutput) Patch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchJSON6902Type) *string { return v.Patch }).(pulumi.StringPtrOutput)
}

func (o PatchJSON6902TypeOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PatchJSON6902Type) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PatchJSON6902TypeArrayOutput struct{ *pulumi.OutputState }

func (PatchJSON6902TypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PatchJSON6902Type)(nil)).Elem()
}

func (o PatchJSON6902TypeArrayOutput) ToPatchJSON6902TypeArrayOutput() PatchJSON6902TypeArrayOutput {
	return o
}

func (o PatchJSON6902TypeArrayOutput) ToPatchJSON6902TypeArrayOutputWithContext(ctx context.Context) PatchJSON6902TypeArrayOutput {
	return o
}

func (o PatchJSON6902TypeArrayOutput) Index(i pulumi.IntInput) PatchJSON6902TypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PatchJSON6902Type {
		return vs[0].([]PatchJSON6902Type)[vs[1].(int)]
	}).(PatchJSON6902TypeOutput)
}

// KIND protocol type
type PortMappingType struct {
	ContainerPort *int    `pulumi:"containerPort"`
	HostPort      *int    `pulumi:"hostPort"`
	ListenAddress *string `pulumi:"listenAddress"`
	Protocol      *string `pulumi:"protocol"`
}

// PortMappingTypeInput is an input type that accepts PortMappingTypeArgs and PortMappingTypeOutput values.
// You can construct a concrete instance of `PortMappingTypeInput` via:
//
//          PortMappingTypeArgs{...}
type PortMappingTypeInput interface {
	pulumi.Input

	ToPortMappingTypeOutput() PortMappingTypeOutput
	ToPortMappingTypeOutputWithContext(context.Context) PortMappingTypeOutput
}

// KIND protocol type
type PortMappingTypeArgs struct {
	ContainerPort pulumi.IntPtrInput    `pulumi:"containerPort"`
	HostPort      pulumi.IntPtrInput    `pulumi:"hostPort"`
	ListenAddress pulumi.StringPtrInput `pulumi:"listenAddress"`
	Protocol      pulumi.StringPtrInput `pulumi:"protocol"`
}

func (PortMappingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PortMappingType)(nil)).Elem()
}

func (i PortMappingTypeArgs) ToPortMappingTypeOutput() PortMappingTypeOutput {
	return i.ToPortMappingTypeOutputWithContext(context.Background())
}

func (i PortMappingTypeArgs) ToPortMappingTypeOutputWithContext(ctx context.Context) PortMappingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortMappingTypeOutput)
}

// PortMappingTypeArrayInput is an input type that accepts PortMappingTypeArray and PortMappingTypeArrayOutput values.
// You can construct a concrete instance of `PortMappingTypeArrayInput` via:
//
//          PortMappingTypeArray{ PortMappingTypeArgs{...} }
type PortMappingTypeArrayInput interface {
	pulumi.Input

	ToPortMappingTypeArrayOutput() PortMappingTypeArrayOutput
	ToPortMappingTypeArrayOutputWithContext(context.Context) PortMappingTypeArrayOutput
}

type PortMappingTypeArray []PortMappingTypeInput

func (PortMappingTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortMappingType)(nil)).Elem()
}

func (i PortMappingTypeArray) ToPortMappingTypeArrayOutput() PortMappingTypeArrayOutput {
	return i.ToPortMappingTypeArrayOutputWithContext(context.Background())
}

func (i PortMappingTypeArray) ToPortMappingTypeArrayOutputWithContext(ctx context.Context) PortMappingTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PortMappingTypeArrayOutput)
}

// KIND protocol type
type PortMappingTypeOutput struct{ *pulumi.OutputState }

func (PortMappingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PortMappingType)(nil)).Elem()
}

func (o PortMappingTypeOutput) ToPortMappingTypeOutput() PortMappingTypeOutput {
	return o
}

func (o PortMappingTypeOutput) ToPortMappingTypeOutputWithContext(ctx context.Context) PortMappingTypeOutput {
	return o
}

func (o PortMappingTypeOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortMappingType) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

func (o PortMappingTypeOutput) HostPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PortMappingType) *int { return v.HostPort }).(pulumi.IntPtrOutput)
}

func (o PortMappingTypeOutput) ListenAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortMappingType) *string { return v.ListenAddress }).(pulumi.StringPtrOutput)
}

func (o PortMappingTypeOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PortMappingType) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type PortMappingTypeArrayOutput struct{ *pulumi.OutputState }

func (PortMappingTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PortMappingType)(nil)).Elem()
}

func (o PortMappingTypeArrayOutput) ToPortMappingTypeArrayOutput() PortMappingTypeArrayOutput {
	return o
}

func (o PortMappingTypeArrayOutput) ToPortMappingTypeArrayOutputWithContext(ctx context.Context) PortMappingTypeArrayOutput {
	return o
}

func (o PortMappingTypeArrayOutput) Index(i pulumi.IntInput) PortMappingTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PortMappingType {
		return vs[0].([]PortMappingType)[vs[1].(int)]
	}).(PortMappingTypeOutput)
}

func init() {
	pulumi.RegisterOutputType(ClusterTypeOutput{})
	pulumi.RegisterOutputType(MountTypeOutput{})
	pulumi.RegisterOutputType(MountTypeArrayOutput{})
	pulumi.RegisterOutputType(NetworkingTypeOutput{})
	pulumi.RegisterOutputType(NetworkingTypePtrOutput{})
	pulumi.RegisterOutputType(NodeTypeOutput{})
	pulumi.RegisterOutputType(NodeTypeArrayOutput{})
	pulumi.RegisterOutputType(PatchJSON6902TypeOutput{})
	pulumi.RegisterOutputType(PatchJSON6902TypeArrayOutput{})
	pulumi.RegisterOutputType(PortMappingTypeOutput{})
	pulumi.RegisterOutputType(PortMappingTypeArrayOutput{})
}
